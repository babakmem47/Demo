1. Create this steps.txt
	- Add bootstrap-united(modified) from LNDCodefirst to Content folder.
	- Change BundleConfig bootstrap: "~/Content/bootstrap.css", -> "~/Content/bootstrap-united.css",
	- Clear index page. 
	- Download IranSansWeb.woff fonts(5) from https://changal.com/assets/fonts/iran-sans/woff/. Put it into Font folder.
2. Add bootstrap-united + Download IranSansWeb.woff
	- Layout.cshtml:
		Consolidate jquery and bootstrap.js into lib
	- BundleConfig:
		Complete consolidating jQuery and Bootstrap.js:
				bundles.Add(new ScriptBundle("~/bundles/jquery").Include(			// Mistake: make it ~/bundles/lib
								"~/Scripts/jquery-{version}.js",
								"~/Scripts/bootstrap.js",
								"~/Scripts/respond.js"));
	- Layout.cshtml:
		Change 'div to 'nav' in <div class="navbar navbar-inverse navbar-fixed-top"> 
		Change 'container' to 'container-fluid' in <div class="container"> in 2 place in this page
		Delete @Html.ActionLink("Application name", ... and replace it with:
				<a class="navbar-brand" href="#"> <span class="glyphicon glyphicon-home"></span></a>
		Copy NavBar Example for DropDown from https://getbootstrap.com/docs/3.3/examples/navbar/:
				<li class="dropdown">
				  <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Dropdown <span class="caret"></span></a>
				  <ul class="dropdown-menu">
					<li><a href="#">Action</a></li>
					<li><a href="#">Another action</a></li>
					<li><a href="#">Something else here</a></li>
					<li role="separator" class="divider"></li>
					<li><a href="#">Separated link</a></li>
					<li role="separator" class="divider"></li>
					<li><a href="#">One more separated link</a></li>
				  </ul>
				</li>
		Paste it instead of <li>@Html.ActionLink("Home", "Index", "Home")</li>
		Farsination of Dropdowns
	- Add IranSansWeb.woff font:
		Site.css:
					.navbar-inverse {
						font-family: IranSansWeb;
					}
					.navbar-inverse navbar-fixed-top {
						direction: rtl;
					}
					@font-face {
						font-family: IranSansWeb;
						src: url(/fonts/IRANSansWeb.woff);
					}
	** Problem: navbar dropdown not collapsing!
3. DropDowns in Layout.cshtml + Add IRANSansWeb.woff to navbar
	## Solution: The cause of this problem is I didn't replace 'jquery' with 'lib' in BundleConfig after consolidating!

	// Move ورود to the left of navbar:
				.navbar-right {
					float: left !important;
				}

	// Make DropDowns in navbar closer to each other:
				.navbar-nav > li  {
					padding-left: 20px;
				}

	// Make font size of each dropdown smaller:
				.navbar-nav > li > a {
					font-size: 14px;
				}
	// Move the menu below each DropDown to the left:
				.dropdown-menu {
					margin: 2px -46px 0;
				}
 4. Improving the look and feel of NavBar
	
	- Separate ApplicationDbContext.cs and ApplicationUser.cs from IdentityModels.cs
	- Execute Enable-Migration
	- Execute Add-Migration InitialModel
	- Change Web.config to point to LNDServer:
	<add name="DefaultConnection" connectionString="Data Source=LNDSRVBK\LND_INSTANCE;Initial Catalog=Demo;Integrated Security=False;User Id=sa;Password=Qwe123;MultipleActiveResultSets=True" providerName="System.Data.SqlClient" />
	- Execute Add-Migration InitialModel
	- Execute Update-Database
5. Enable Migration 

	- Create IpRange and Setad class
		public class IpRange
		{
			public int Id { get; set; }

			public string Range { get; set; }

			public string Mask { get; set; }

			public ICollection<Setad> Setads { get; set; }
		}

		public class Setad
		{
			public int Id { get; set; }

			public string Name { get; set; }

			public string Shakhes { get; set; }

			public bool IsModiriatShoab { get; set; }

			public string Address { get; set; }

			public IpRange IpRange { get; set; }

			public int IpRangeId { get; set; }
		}

	- Add IpRange and Setad DbSet<> to ADBC:
		 public class ApplicationDbContext : IdentityDbContext<ApplicationUser>
		 {
			public DbSet<IpRange> IpRanges { get; set; }
			public DbSet<Setad> Setads { get; set; }
			.
			.
			.
	

	- Add 'EntityConfigurations' folder in Solution Explorer to put Fluent APIs in it
	- Add 'IpRangeConfiguration.cs' and SetadConfiguration.cs and add Fluent APIs to it:
		public class IpRangeConfiguration : EntityTypeConfiguration<IpRange>
		{
			public IpRangeConfiguration()
			{
				HasKey(ip => ip.Id);

				Property(ip => ip.Range)
					.IsRequired()
					.HasMaxLength(15)
					.HasColumnAnnotation(
						IndexAnnotation.AnnotationName,
						new IndexAnnotation(new IndexAttribute { IsUnique = true })
						);

				Property(ip => ip.Mask)
					.IsRequired()
					.HasMaxLength(2).IsFixedLength();

				// One-to-Many with Setad
				HasMany(ip => ip.Setads)
					.WithRequired(st => st.IpRange)
					.HasForeignKey(st => st.IpRangeId)
					.WillCascadeOnDelete(false);
			}
		}

		public class SetadConfiguration : EntityTypeConfiguration<Setad>
		{
			public SetadConfiguration()
			{
				HasKey(st => st.Id);

				Property(st => st.Name)
					.IsRequired()
					.HasMaxLength(50);

				Property(st => st.Shakhes)
					.HasMaxLength(4).IsFixedLength();

				Property(st => st.IsModiriatShoab)
					.IsRequired();

				Property(st => st.Address)
					.HasMaxLength(200);

				// Many-to-One with IpRange
				HasRequired(st => st.IpRange)
					.WithMany(ip => ip.Setads);

			}
		}

	- Create OnModelCreating method in ADBC:
		protected override void OnModelCreating(DbModelBuilder modelBuilder)
		{
			base.OnModelCreating(modelBuilder);
		}
	- Add Definition of IpRangeConfiguration.cs and SetadConfiguration.cs to onModelCreating method of ADBC
		protected override void OnModelCreating(DbModelBuilder modelBuilder)
		{
			modelBuilder.Configurations.Add(new IpRangeConfiguration());
			modelBuilder.Configurations.Add(new SetadConfiguration());

			base.OnModelCreating(modelBuilder);
		}

	- Add-Migration AddIpRangeAndSetadClassWithFluentApi
	- Update-Database.
6. Add IpRange.cs and Setad.cs with FluentApi.

	- Add Email field to Setad.cs:
		public string Email { get; set; }
	- Define FluentAPI:
		Property(st => st.Email)
			.IsOptional()
			.HasMaxLength(30);
	- PM> Add-Migration AddEmailToSetad
	- PM> Update-Database
7. Add Email Field to Setad

	- Add Provice class:
		public class Province
		{
			public int Id { get; set; }

			public string ProvinceName { get; set; }

			public byte Octet3 { get; set; }

			public string CityCenter { get; set; }

			public string PreTelCode { get; set; }

			public Setad Setad { get; set; }

			public int? SetadId { get; set; }
		}

	- Add Corresponding FluentAPI:
		public class ProvinceConfiguration : EntityTypeConfiguration<Province>
		{
			public ProvinceConfiguration()
			{
				Property(pr => pr.ProvinceName)
					.IsRequired()
					.HasMaxLength(25);

				Property(pr => pr.Octet3)
					.IsOptional();

				Property(pr => pr.CityCenter)
					.IsRequired()
					.HasMaxLength(25);

				Property(pr => pr.PreTelCode)
					.IsOptional()
					.HasMaxLength(4);
			
				// One-To-(0..1) with Setad
				HasOptional(pr => pr.Setad)
					.WithRequired(st => st.Province);
			}
		}
	- Add FluentAPI to SetadConfiguration:
		HasOptional(st => st.Province)
			.WithRequired(pr => pr.Setad);
	- Add below to ADBC:
        public DbSet<Province> Provinces { get; set; }
		.
			modelBuilder.Configurations.Add(new ProvinceConfiguration());
		.
	- Build + Add-Migration AddProvinceClassWithFluentApi + Update-Database
8. Add Province Class With FluentApi

	- Populate Provinces:
		PM> Add-Migration PopulateProvinces
	** Cannot Populate Province
	## Finally I change relation between Setad and Province to Many-To-One:
		In Setad.cs:
			public Province Province { get; set; }

			public int? ProvinceId { get; set; }

		In Province.cs:
			public ICollection<Setad> Setads { get; set; }
		
		In SetadConfiguration: First Remove One-to-(0..1) relationship (see above)
			
			// Many-to-(0..1) with Province
            HasOptional(st => st.Province)
                .WithMany(pr => pr.Setads)
                .HasForeignKey(st => st.ProvinceId)
                .WillCascadeOnDelete(false);
		
		PM> Add-Migration PopulateProvinces
		Insert SQL statement in this migration:
		Sql(@"
			INSERT [dbo].[Provinces] ([ProvinceName], [CityCenter], [PreTelCode], [Octet3]) VALUES (N'تهران', N'تهران', N'021', 0)
			INSERT [dbo].[Provinces] ([ProvinceName], [CityCenter], [PreTelCode], [Octet3]) VALUES (N'قم', N'قم', N'025', 5)
		");
		PM> Update-Database
9. Change relation between Setad and Province to Many-To-One and Populate Province from migration